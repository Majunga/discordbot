resources:
- repo: self
queue:
  name: Default

trigger:
  batch: true
  branches:
    include:
    - master

variables:
  registryServerName: '$(registryName).azurecr.io'
  buildId: '$(build.buildId)'
  # define 4 more variables: projectName, registryName, registryLogin and registryPassword in the build pipeline in UI

steps:
- powershell: docker build -f $(system.defaultWorkingDirectory)/Dockerfile -t $(registryServerName)/$(imageName):$(build.buildId) -t $(registryServerName)/$(imageName):releaselatest $(system.defaultWorkingDirectory)
  displayName: 'docker build'

- powershell: docker login $(registryServerName) -u $(registryLogin) -p $(registryPassword)
  displayName: 'docker login'

- powershell: |
    docker push $(registryServerName)/$(imageName):$(build.buildId)
    docker push $(registryServerName)/$(imageName):latest
  displayName: 'docker push'
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))

- task: CopyFiles@2
  displayName: 'Copy Deployment config to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: 'build/$(projectName).deployment.yml'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/build'
    ArtifactName: 'discordweb'
    publishLocation: 'Container'